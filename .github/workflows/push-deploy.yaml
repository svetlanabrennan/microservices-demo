# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Push and Deploy"

on:
  workflow_dispatch:

jobs:
  push-deploy:
    permissions:
        contents: 'read'
        id-token: 'write'
    runs-on: ubuntu-latest
    # environment: development
    # env:
    #   OTEL_EXPORTER_OTLP_ENDPOINT: https://staging-otlp.nr-data.net:4317
    #   OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: https://staging-otlp.nr-data.net:4317
    #   OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: https://staging-otlp.nr-data.net:4317
    #   OTEL_EXPORTER_OTLP_ENDPOINT_INFINITE_TRACING: ${{ secrets.INFINITE_TRACING_ENDPOINT }}"
    #   OTEL_EXPORTER_OTLP_HEADERS: "api-key: ${{ secrets.API_KEY }}"
    #   NEW_RELIC_API_KEY: ${{ secrets.API_KEY }}
    #   NEW_RELIC_LICENSE_KEY: ${{ secrets.API_KEY }}
    #   NEW_RELIC_HOST: staging-collector.newrelic.com
    steps:
    - uses: actions/checkout@v2
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/695562648852/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider'
        service_account: 'microservices-otel-demo@opentracing-265818.iam.gserviceaccount.com'
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'
    # - name: install dependencies
    #   run: .github/workflows/install-dependencies.sh
    #   shell: bash
    # - name: connect to cluster
    #   run: gcloud container clusters get-credentials dev-microservices-otel-demo --zone us-central1-a --project ${{ secrets.PROJECT_ID }}

    # - name: Push latest images to GCR
    #   timeout-minutes: 20
    #   run: |
    #     skaffold config set --global local-cluster false
    #     # tag with git hash
    #     skaffold build --default-repo=gcr.io/$PROJECT_ID \
    #                    --tag=$GITHUB_SHA
    #     # tag as latest
    #     skaffold build --default-repo=gcr.io/$PROJECT_ID \
    #                    --tag=latest
    #   env:
    #     PROJECT_ID: ${{ secrets.PROJECT_ID }}